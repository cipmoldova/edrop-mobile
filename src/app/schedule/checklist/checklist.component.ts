import { Component, OnInit } from "@angular/core";

import { ActivatedRoute  } from "@angular/router";
import { RouterExtensions } from "nativescript-angular/router";
import * as fs from "tns-core-modules/file-system";
import { alert } from "tns-core-modules/ui/dialogs";
import { DashboardComponent } from "~/app/dashboard/dashboard.component";
import { ChecklistQuestion } from "./checklist-question";

@Component({
    selector: "ns-checklist",
    styleUrls: ["./checklist.component.scss"],
    templateUrl: "./checklist.component.html"
})
export class ChecklistComponent implements OnInit {

    writtenContent: string;
    file: fs.File;

    htmlViewerWidth: string;

    checklistQuestions: Array<ChecklistQuestion>;

    constructor(
        private routerExtension: RouterExtensions,
        private route: ActivatedRoute,
        private dashboard: DashboardComponent,
    ) {
    }

    ngOnInit(): void {
        // Init your component properties here.
        // TODO:
        // this.file.readText().then(
        //     res => {
        //         this.writtenContent = res;
        //     }
        // ).catch(err => {
        //     console.log(err.stack);
        // });
        // this.a.color

        // Credits: Organizatia Tinerilor din Sibiu (otsibiu.ro)
        this.checklistQuestions = new Array<ChecklistQuestion>(
            new ChecklistQuestion("<span><p>AveÈ›i vÃ¢rsta cuprinsÄƒ Ã®ntre 18 È™i 60 de ani?</p></span>", "DA"),
            new ChecklistQuestion("<span><p>AveÈ›i greutatea de peste 50 kg?</p></span>", "DA"),
            new ChecklistQuestion("<span><p>AÈ›i suferit intervenÈ›ii chirurgicale Ã®n ultimele 6 luni?</p></span>", "NU"),
            new ChecklistQuestion("<span><p>AveÈ›i alergii?</p></span>", "NU"),
            new ChecklistQuestion("<span><p>AÈ›i consumat grÄƒsimi, bÄƒuturi alcoolice sau È›igÄƒri Ã®n ultimele 48 ore?</p></span>", "NU"),
            new ChecklistQuestion("<span><p>DacÄƒ sunteÈ›i femeie, sunteÈ›i Ã®nsÄƒrcinatÄƒ sau Ã®n perioada menstrualÄƒ?</p></span>", "NU"),
            new ChecklistQuestion("<span><p>SunteÈ›i sub tratament pentru una din urmÄƒtoarele afecÈ›iuni: <br>ğŸ”¸ hipertensiune <br>ğŸ”¸ boli de inimÄƒ <br>ğŸ”¸ boli renale <br>ğŸ”¸ boli psihice <br>ğŸ”¸ boli endocrine <br>ğŸ”¸ boli cu transmitere sexualÄƒ <br>?</p></span>", "NU"),
            new ChecklistQuestion("<span><p>AveÈ›i sau aÈ›i avut una dintre urmÄƒtoarele boli: <br>ğŸ”¸ hepatitÄƒ (de orice fel) <br>ğŸ”¸ TBC <br>ğŸ”¸ sifilis <br>ğŸ”¸ malarie <br>ğŸ”¸ epilepsie sau alte boli neurologice <br>ğŸ”¸ diabet zaharat <br>ğŸ”¸ boli de inimÄƒ <br>ğŸ”¸ boli de piele<br>?</p></span>", "NU"),
        );
    }

    cancel(): void {
        this.dashboard.goHome();
    }

    check(): void {
        // check whether there are wrong answers
        const failedQuestions = this.checklistQuestions.filter((question) => !question.pass()).length;

        if (failedQuestions > 0) {
            const unansweredQuestions = this.checklistQuestions.filter((question) => question.getLastAnswer() === "");
            if (unansweredQuestions.length > 0) {
                alert({
                    title: "Chestionar necompletat!",
                    message: "VÄƒ rugÄƒm rÄƒspundeÈ›i la toate Ã®ntrebÄƒrile!",
                    okButtonText: "Bine",
                });
            } else {
                alert({
                    title: "Ne pare rÄƒu!",
                    message: "Din pÄƒcate Ã®n acest moment nu sunteÈ›i pregÄƒtit pentru donare!",
                    okButtonText: "Bine",
                });
                this.dashboard.goHome();
            }
        } else {
            this.routerExtension.navigate(
                ["../booking"],
                { relativeTo: this.route },
            );
        }
    }
}
